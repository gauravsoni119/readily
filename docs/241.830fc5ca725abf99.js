(()=>{"use strict";const c={"to-read":"toRead","currently-reading":"currentlyReading",read:"read"},d={Title:"title",Author:"author","My Rating":"myRating","Average Rating":"averageRating",Publisher:"publisher",Binding:"binding","Year Published":"yearPublished","Original Publication Year":"originalPublicationYear","Date Read":"dateRead","Date Added":"dateAdded",Bookshelves:"bookshelves","My Review":"myReview","Number of Pages":"numberOfPages",ISBN:"ISBN","Exclusive Shelf":"exclusiveShelves"},g={shelves:{exclusiveShelves:{toRead:{name:"toRead",totalCount:0,books:[],otherShelves:[]},currentlyReading:{name:"currentlyReading",totalCount:0,books:[],otherShelves:[]},read:{name:"read",totalCount:0,books:[],otherShelves:[]}},others:[]},all:[],totalPagesRead:0};addEventListener("message",({data:n})=>{const a=function f(n){const t=n.split("\n"),a=[],o=t[0].split(",").map(e=>d[e.trim()]);for(let e=1;e<t.length;e++){const v={},i=t[e];let h=0,u=0,s=0;if(""!==i.trim()){for(;s<i.length;){let r=i[s];if('"'===r)do{r=i[++s]}while('"'!==r&&s<i.length-1);if(","===r||s===i.length-1){let l=i.substr(h,s-h).trim();'"'===l[0]&&(l=l.substr(1)),","===l[l.length-1]&&(l=l.substr(0,l.length-1)),'"'===l[l.length-1]&&(l=l.substr(0,l.length-1)),v[o[u++]]=l,h=s+1}++s}a.push(v)}}return a}(n).reduce((o,e)=>{if(e.exclusiveShelves&&S(e,o),e.bookshelves){const v=m(e.bookshelves),i=b(e.bookshelves);v.forEach(h=>{const u=o.shelves.others.find(s=>s.name===h);if(u?(u.books.push(e),++u.totalCount):o.shelves.others.push({name:h,totalCount:1,books:[e]}),i){const s=o.shelves.exclusiveShelves[i].otherShelves.find(r=>r.name===h);s?(s.books.push(e),++s.totalCount):o.shelves.exclusiveShelves[i].otherShelves.push({name:h,totalCount:1,books:[e]})}})}return e.ISBN=e.ISBN.replace(/\D+/g,""),o.all.push(e),o},Object.assign({},g));postMessage(a)});const S=(n,t)=>{const a=n.exclusiveShelves,o=t.shelves.exclusiveShelves[c[a]];o.books.push(n),++o.totalCount,t.totalPagesRead+="to-read"===a&&parseInt(n.numberOfPages,10)||0},m=n=>n.split(",").map(t=>t.trim()).filter(t=>!Object.keys(c).includes(t)),b=n=>{const t=n.split(",").map(a=>a.trim()).find(a=>!!c[a]);return t?c[t]:void 0}})();